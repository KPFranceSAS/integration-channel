# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $refreshToken : '%env(resolve:CHANNEL_REFRESHTOKEN)%'
            $applicationId : '%env(resolve:CHANNEL_APPLICATIONID)%'
            $sharedSecret : '%env(resolve:CHANNEL_SECRET)%'
            
            $urlBC : '%env(resolve:BC_URL)%'
            $loginBC : '%env(resolve:BC_LOGIN)%'
            $passwordBC : '%env(resolve:BC_PASSWORD)%'

            $appEnv : '%env(resolve:APP_ENV)%'

            $amzLwaId : '%env(resolve:AMZ_LWA_ID)%'
            $amzLwaSecret  : '%env(resolve:AMZ_LWA_SECRET)%'
            $amzAwsId  : '%env(resolve:AMZ_AWS_ID)%'
            $amzAwsSecret  : '%env(resolve:AMZ_AWS_SECRET)%'
            $amzArn  : '%env(resolve:AMZ_ARN)%'
            $amzRefreshToken  : '%env(resolve:AMZ_REFRESH_TOKEN)%'

            $akeneoUrl  : '%env(resolve:AKENEO_URL)%'
            $akeneoClientId  : '%env(resolve:AKENEO_CLIENT_ID)%'
            $akeneoClientSecret  : '%env(resolve:AKENEO_CLIENT_SECRET)%'
            $akeneoUsername  : '%env(resolve:AKENEO_USERNAME)%'
            $akeneoPassword  : '%env(resolve:AKENEO_PASSWORD)%'

            $aliExpressClientId :  '%env(resolve:ALI_EXPRESS_ID)%'
            $aliExpressClientSecret : '%env(resolve:ALI_EXPRESS_SECRET)%'
            $aliExpressClientAccessToken : '%env(resolve:ALI_EXPRESS_TOKEN)%'

            $fitbitExpressClientId :  '%env(resolve:FITBIT_EXPRESS_ID)%'
            $fitbitExpressClientSecret : '%env(resolve:FITBIT_EXPRESS_SECRET)%'
            $fitbitExpressClientAccessToken : '%env(resolve:FITBIT_EXPRESS_TOKEN)%'

            $owletCareToken : '%env(resolve:OWLET_CARE_TOKEN)%'
            $owletCareClientId : '%env(resolve:OWLET_CARE_CLIENTID)%'
            $owletCareClientSecret : '%env(resolve:OWLET_CARE_CLIENTSECRET)%'
            $owletCareShopDomain : '%env(resolve:OWLET_CARE_SHOPDOMAINE)%'
            $owletCareVersion : '%env(resolve:OWLET_CARE_VERSION)%'
            $owletCareScopes : '%env(resolve:OWLET_CARE_SCOPES)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
